{"version":3,"sources":["webpack:///src/app/places/discover/discover.page.html","webpack:///src/app/http.service.ts","webpack:///src/app/places/discover/discover-routing.module.ts","webpack:///src/app/places/discover/discover.module.ts","webpack:///src/app/places/discover/discover.page.scss","webpack:///src/app/places/discover/discover.page.ts","webpack:///src/app/places/places.service.ts"],"names":["HttpService","http","URL","url2","get","startPointId","endPointId","url","observe","providedIn","routes","path","component","loadChildren","then","m","OfferPageModule","DiscoverPageRoutingModule","imports","forChild","exports","DiscoverPageModule","declarations","DiscoverPage","placesSrv","navCtrl","translate","alertCtrl","startPointCitiesAvailable","endPointCitiesAvailable","startPointCities","endPointCities","language","ignoreNextStartPointChange","ignoreNextEndPointChange","startPointCity","id","name","endPointCity","addLangs","setDefaultLang","lang","getBrowserLang","use","getAllCities","cleanDataSubscription","cleanPathsSubj$","subscribe","_res","onClearAll","unsubscribe","event","detail","value","onClearStartPoint","substring","target","getStartPointAutocomplete","cities","length","ionInputStartElRef","nativeElement","querySelector","onClearEndPoint","getEndPointAutocomplete","ionInputEndElRef","city","getPaths","console","log","navigateBack","read","selector","template","iconMap","Map","set","Icons","transportIconMap","BUS","TRAIN","CAR","TAXI","FLIGHT","PlacesService","httpSrv","router","allCities","pathsSubj$","citiesSub","getCities","str","getCitiesAutocomplete","pipe","res","re","match","errorHandler","startPoint","endPoint","data","paths","body","i","duration_minutes","euro_price","pathsArr","filter","transformedPaths","map","transformPath","currentPaths","next","_error","type","find","p","routeType","create","header","instant","message","buttons","text","handler","navigate","alertEl","present","transformed","transformDuration","toString","transformPrice","imgUrl","transportation_type","transformedPath","direct_paths","transformPathDetails","minutes","days","Math","floor","dayStr","hours","hourStr","min","minStr","duration","price","euro","cent","citiesList","toLowerCase","indexOf","transformedList","item","index","array","sortedList","sort","a","b","slice"],"mappings":"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","file":"discover-discover-module-es5.js","sourcesContent":["export default \"<ion-toolbar color=\\\"primary\\\">\\r\\n  <ion-buttons slot=\\\"start\\\">\\r\\n  <!--   <ion-menu-button menu=\\\"m1\\\"></ion-menu-button> -->\\r\\n    <ion-menu-button></ion-menu-button>\\r\\n  </ion-buttons>\\r\\n  <ion-buttons class=\\\"select\\\" slot=\\\"end\\\">\\r\\n    <ion-item  class=\\\"select\\\" lines=\\\"none\\\">\\r\\n      <!--   <ion-icon name=\\\"checkbox-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n   <ion-label>{{'SelectLanguage' | translate}}</ion-label> -->\\r\\n      <ion-select [value]=\\\"language\\\" class=\\\"select\\\" interface=\\\"popover\\\" (ionChange)=\\\"onSelectLang($event)\\\">\\r\\n        <ion-select-option value=\\\"en\\\">En</ion-select-option>\\r\\n        <ion-select-option value=\\\"ru\\\">Ru</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n  </ion-buttons>\\r\\n\\r\\n  <ion-title class=\\\"hide-xs\\\">\\r\\n     <span [ngStyle]=\\\"{'padding-right':'13px'}\\\" >CheapTrip. </span>  {{'DISCOVER.MainSlogan' | translate }}</ion-title>\\r\\n  <p class=\\\"title hide-sm\\\" ><span [ngStyle]=\\\"{'padding-right':'13px'}\\\">CheapTrip.</span>{{'DISCOVER.MainSlogan' | translate }}</p>\\r\\n\\r\\n\\r\\n\\r\\n</ion-toolbar>\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-title color=\\\"secondary\\\" class=\\\"text-center hide-xs\\\">{{'DISCOVER.MainMessage' | translate}} </ion-card-title>\\r\\n      <ion-card-subtitle color=\\\"secondary\\\" class=\\\"text-center hide-sm\\\">\\r\\n        {{'DISCOVER.MainMessage' | translate}}</ion-card-subtitle>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-grid>\\r\\n        <ion-row class=\\\"input\\\">\\r\\n          <ion-col size=\\\"14\\\" size-md=\\\"7\\\">\\r\\n            <ion-item class=\\\"pointInpt\\\">\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"secondary\\\"><b>{{'DISCOVER.From' | translate}}</b></ion-label>\\r\\n              <ion-input #ionInputStartElRef clearInput (ionChange)=\\\"onStartPointSearchChange($event)\\\" [(ngModel)]=\\\"startPointCity.name\\\">\\r\\n              </ion-input>\\r\\n              \\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"autocomplete\\\" *ngIf=\\\"startPointCitiesAvailable\\\">\\r\\n              <ion-list style=\\\"width: 100%; max-height: 200px; overflow-y: scroll;\\\" lines=\\\"none\\\">\\r\\n                <ion-item *ngFor=\\\"let result of startPointCities\\\" (click)=\\\"startPointCitySelected(result)\\\" button>\\r\\n                  <p>{{result.name}}</p>\\r\\n                </ion-item>\\r\\n              </ion-list>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n<!-- \\r\\n          <ion-col class=\\\"hide-xs\\\" size-md=\\\"2\\\">\\r\\n            <ion-img class=\\\"logo\\\" src=\\\"../../../assets/logo.jpg\\\"></ion-img>\\r\\n          </ion-col> -->\\r\\n\\r\\n          <ion-col size=\\\"14\\\" size-md=\\\"7\\\">\\r\\n            <ion-item class=\\\"pointInpt\\\">\\r\\n              <ion-label position=\\\"floating\\\" color=\\\"secondary\\\"><b>{{'DISCOVER.To' | translate}}</b></ion-label>\\r\\n              <ion-input #ionInputEndElRef clearInput (ionChange)=\\\"onEndPointSearchChange($event)\\\" [(ngModel)]=\\\"endPointCity.name\\\">\\r\\n              </ion-input>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"autocomplete\\\" *ngIf=\\\"endPointCitiesAvailable\\\">\\r\\n              <ion-list style=\\\"width: 100%; max-height: 200px; overflow-y: scroll;\\\">\\r\\n                <ion-item *ngFor=\\\"let result of endPointCities\\\" (click)=\\\"endPointCitySelected(result)\\\" button>\\r\\n                  <p>{{result.name}}</p>\\r\\n                </ion-item>\\r\\n              </ion-list>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"buttons\\\" size-xs=\\\"12\\\" offset-xs=\\\"0\\\" offset=\\\"2\\\" size-md=\\\"8\\\" offset-md=\\\"2\\\">\\r\\n            <ion-button size=\\\"small\\\" fill=\\\"solid\\\" type=\\\"button\\\" (click)=\\\"onClearAll()\\\" color=\\\"secondary\\\">{{'DISCOVER.Clear' | translate}}\\r\\n            </ion-button>\\r\\n            <ion-button size=\\\"small\\\" fill=\\\"solid\\\" type=\\\"button\\\" color=\\\"primary\\\" routerDirection=\\\"forward\\\"\\r\\n              routerLink=\\\"/places/tabs/discover/offer\\\" (click)=\\\"searchPath()\\\">{{'DISCOVER.Submit' | translate}}</ion-button>\\r\\n\\r\\n            <!--  <div class=\\\"text-center\\\">\\r\\n              <ion-button size=\\\"small\\\" fill=\\\"solid\\\" type=\\\"button\\\" (click)=\\\"onClearAll()\\\" color=\\\"secondary\\\">Clear\\r\\n              </ion-button>\\r\\n              <ion-button size=\\\"small\\\" fill=\\\"solid\\\" type=\\\"button\\\" color=\\\"primary\\\" routerDirection=\\\"forward\\\"\\r\\n                routerLink=\\\"/places/tabs/discover/offer\\\" (click)=\\\"searchPath()\\\">Let's go</ion-button>\\r\\n            </div> -->\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n       <!--  <ion-row class=\\\"hide-sm\\\"> -->\\r\\n          <ion-row >\\r\\n          <ion-col size=\\\"6\\\" offset=\\\"3\\\">\\r\\n            <ion-img class=\\\"logo\\\" src=\\\"../../../assets/logo.jpg\\\"></ion-img>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card-content>\\r\\n\\r\\n  </ion-card>\\r\\n</ion-content>\";","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { environment } from \"../environments/environment\";\nimport { ICity } from \"./places/places.model\";\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpService {\n  constructor(private http: HttpClient) {}\n\n  URL = environment.url2;\n\n  getCities(): Observable<any> {\n    return this.http.get(`${this.URL}/locations/all`);\n  }\n\n  getPaths(startPointId: number, endPointId: number): Observable<any> {\n    const url = `${this.URL}/routes?from=${startPointId}&to=${endPointId}`;\n    return this.http.get(url, { observe: \"response\" });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DiscoverPage } from './discover.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DiscoverPage\n  },\n  {\n    path: 'offer',\n    loadChildren: () => import('./offer/offer.module').then( m => m.OfferPageModule)\n  },\n /*  {\n    path: 'details',\n    loadChildren: () => import('./details/details.module').then( m => m.DetailsPageModule)\n  } */\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DiscoverPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DiscoverPageRoutingModule } from './discover-routing.module';\n\nimport { DiscoverPage } from './discover.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DiscoverPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [DiscoverPage]\n})\nexport class DiscoverPageModule {}\n","export default \".logo {\\n  margin-right: 1rem;\\n}\\n\\nh3 {\\n  text-align: center;\\n  color: var --ion-color-secondary;\\n}\\n\\nion-title, p.title {\\n  font-style: italic;\\n}\\n\\np.title {\\n  font-size: 0.7rem;\\n}\\n\\n.select {\\n  --background: var(--ion-color-primary);\\n  --color: white;\\n}\\n\\nion-card-title,\\nion-card-subtitle {\\n  text-align: center;\\n  line-height: 1.5rem;\\n}\\n\\nion-img {\\n  width: 100%;\\n  height: auto;\\n  -o-object-fit: contain;\\n     object-fit: contain;\\n}\\n\\nion-row.input {\\n  --ion-grid-columns: 14;\\n}\\n\\n@media (max-width: 576px) {\\n  .hide-xs {\\n    display: none;\\n  }\\n}\\n\\n@media (min-width: 576px) and (max-width: 2000px) {\\n  .hide-sm {\\n    display: none;\\n  }\\n}\\n\\n.item-has-focus {\\n  --highlight-background: var(--ion-color-primary);\\n}\\n\\nion-input {\\n  --padding-start: 1rem;\\n  --padding-top: 0.1rem;\\n  padding: 1rem;\\n}\\n\\nion-item.pointInput {\\n  --background: rgba(255, 72, 0, 0.1);\\n}\\n\\nion-label {\\n  --color: var(--ion-color-secondary);\\n}\\n\\nion-content {\\n  --keyboard-offset: 10rem;\\n}\\n\\nion-list ion-item ion-label {\\n  margin: 0px;\\n}\\n\\nion-list ion-item {\\n  --min-height: 24px;\\n  margin: 0px;\\n}\\n\\nion-item.autocomplete {\\n  position: absolute;\\n  z-index: 100;\\n}\\n\\nion-item.autocomplete ion-list ion-item p {\\n  font-size: 0.8rem;\\n}\\n\\nion-card {\\n  height: 100vh;\\n}\\n\\nion-button {\\n  margin-top: 3rem;\\n}\\n\\nion-col.buttons {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGxhY2VzL2Rpc2NvdmVyL2Rpc2NvdmVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGdDQUFBO0FBQ0Y7O0FBQ0E7RUFFRSxrQkFBQTtBQUNGOztBQUNBO0VBRUUsaUJBQUE7QUFDRjs7QUFHQTtFQUNJLHNDQUFBO0VBQ0EsY0FBQTtBQUFKOztBQUdBOztFQUVFLGtCQUFBO0VBQ0EsbUJBQUE7QUFBRjs7QUFHQTtFQUNFLFdBQUE7RUFDRCxZQUFBO0VBQ0Msc0JBQUE7S0FBQSxtQkFBQTtBQUFGOztBQUdBO0VBQ0Usc0JBQUE7QUFBRjs7QUFHQTtFQUNFO0lBQ0UsYUFBQTtFQUFGO0FBQ0Y7O0FBR0E7RUFDRTtJQUNFLGFBQUE7RUFERjtBQUNGOztBQUtBO0VBQ0UsZ0RBQUE7QUFIRjs7QUFNQTtFQUNFLHFCQUFBO0VBQ0EscUJBQUE7RUFDQSxhQUFBO0FBSEY7O0FBTUE7RUFDRSxtQ0FBQTtBQUhGOztBQU1BO0VBQ0UsbUNBQUE7QUFIRjs7QUFLQTtFQUNFLHdCQUFBO0FBRkY7O0FBS0E7RUFDRSxXQUFBO0FBRkY7O0FBS0E7RUFDRSxrQkFBQTtFQUNBLFdBQUE7QUFGRjs7QUFLQTtFQUNFLGtCQUFBO0VBRUEsWUFBQTtBQUhGOztBQU1NO0VBQ0UsaUJBQUE7QUFKUjs7QUFTQTtFQUNFLGFBQUE7QUFORjs7QUFRQTtFQUNFLGdCQUFBO0FBTEY7O0FBUUE7RUFDRSxhQUFBO0VBQ0EsOEJBQUE7QUFMRiIsImZpbGUiOiJzcmMvYXBwL3BsYWNlcy9kaXNjb3Zlci9kaXNjb3Zlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9nbyB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xyXG59XHJcblxyXG5oMyB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGNvbG9yOiB2YXIgKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XHJcbn1cclxuaW9uLXRpdGxlICwgcC50aXRsZXtcclxuLy8gIGZvbnQtZmFtaWx5OiBMYXRvLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5wLnRpdGxle1xyXG5cclxuICBmb250LXNpemU6IDAuN3JlbVxyXG59XHJcblxyXG5cclxuLnNlbGVjdHtcclxuICAgIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xyXG4gICAgLS1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi1jYXJkLXRpdGxlLFxyXG5pb24tY2FyZC1zdWJ0aXRsZSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjVyZW07XHJcbn1cclxuXHJcbmlvbi1pbWcge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gaGVpZ2h0OiBhdXRvO1xyXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbn1cclxuXHJcbmlvbi1yb3cuaW5wdXR7XHJcbiAgLS1pb24tZ3JpZC1jb2x1bW5zOiAxNDtcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgLmhpZGUteHMge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkgYW5kIChtYXgtd2lkdGg6IDIwMDBweCkge1xyXG4gIC5oaWRlLXNtIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLml0ZW0taGFzLWZvY3VzIHtcclxuICAtLWhpZ2hsaWdodC1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbn1cclxuXHJcbmlvbi1pbnB1dCB7XHJcbiAgLS1wYWRkaW5nLXN0YXJ0OiAxcmVtO1xyXG4gIC0tcGFkZGluZy10b3A6IDAuMXJlbTtcclxuICBwYWRkaW5nOiAxcmVtO1xyXG59XHJcblxyXG5pb24taXRlbS5wb2ludElucHV0IHtcclxuICAtLWJhY2tncm91bmQ6IHJnYmEoMjU1LCA3MiwgMCwgMC4xKTtcclxufVxyXG5cclxuaW9uLWxhYmVsIHtcclxuICAtLWNvbG9yOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcclxufVxyXG5pb24tY29udGVudCB7XHJcbiAgLS1rZXlib2FyZC1vZmZzZXQ6IDEwcmVtO1xyXG59XHJcblxyXG5pb24tbGlzdCBpb24taXRlbSBpb24tbGFiZWwge1xyXG4gIG1hcmdpbjogMHB4O1xyXG59XHJcblxyXG5pb24tbGlzdCBpb24taXRlbSB7XHJcbiAgLS1taW4taGVpZ2h0OiAyNHB4O1xyXG4gIG1hcmdpbjogMHB4O1xyXG59XHJcblxyXG5pb24taXRlbS5hdXRvY29tcGxldGUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHJcbiAgei1pbmRleDogMTAwO1xyXG4gIGlvbi1saXN0IHtcclxuICAgIGlvbi1pdGVtIHtcclxuICAgICAgcCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAwLjhyZW07XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuaW9uLWNhcmQge1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbn1cclxuaW9uLWJ1dHRvbiB7XHJcbiAgbWFyZ2luLXRvcDogM3JlbTtcclxufVxyXG5cclxuaW9uLWNvbC5idXR0b25zIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG4iXX0= */\";","import {\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\n\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { AlertController, NavController } from \"@ionic/angular\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ICity } from \"../places.model\";\r\n\r\nimport { PlacesService } from \"../places.service\";\r\n\r\n@Component({\r\n  selector: \"app-discover\",\r\n  templateUrl: \"./discover.page.html\",\r\n  styleUrls: [\"./discover.page.scss\"],\r\n})\r\nexport class DiscoverPage implements OnInit, OnDestroy {\r\n  startPointCitiesAvailable: boolean = false;\r\n  endPointCitiesAvailable: boolean = false;\r\n  startPointCities: ICity[] = [];\r\n  endPointCities: ICity[] = [];\r\n  cleanDataSubscription: Subscription;\r\n\r\n  @ViewChild(\"ionInputStartElRef\", { read: ElementRef })\r\n  ionInputStartElRef: ElementRef;\r\n  @ViewChild(\"ionInputEndElRef\", { read: ElementRef })\r\n  ionInputEndElRef: ElementRef;\r\n\r\n  language: string = \"en\";\r\n  ignoreNextStartPointChange: boolean = false;\r\n  ignoreNextEndPointChange: boolean = false;\r\n  startPointCity: ICity = { id: -1, name: \"\" };\r\n  endPointCity: ICity = { id: -1, name: \"\" };\r\n\r\n  constructor(\r\n    private placesSrv: PlacesService,\r\n    private navCtrl: NavController,\r\n    public translate: TranslateService,\r\n    private alertCtrl: AlertController\r\n  ) {\r\n    translate.addLangs([\"en\", \"ru\"]);\r\n    translate.setDefaultLang(\"en\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    const lang = this.translate.getBrowserLang();\r\n\r\n    if (lang == \"ru\") {\r\n      this.translate.use(\"ru\");\r\n      this.language = \"ru\";\r\n    }\r\n\r\n    this.placesSrv.getAllCities();\r\n\r\n    this.cleanDataSubscription = this.placesSrv.cleanPathsSubj$.subscribe(\r\n      (_res) => {\r\n        this.onClearAll();\r\n      }\r\n    );\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.cleanDataSubscription.unsubscribe();\r\n  }\r\n\r\n  onStartPointSearchChange(event: any) {\r\n    if (event.detail.value == \"\") {\r\n      this.onClearStartPoint();\r\n    }\r\n    const substring = event.target.value;\r\n    if (this.ignoreNextStartPointChange) {\r\n      this.ignoreNextStartPointChange = false;\r\n      this.startPointCitiesAvailable = false;\r\n      return;\r\n    }\r\n    this.placesSrv.getStartPointAutocomplete(substring).subscribe((cities) => {\r\n      this.startPointCities = cities;\r\n      if (cities.length > 0) {\r\n        this.startPointCitiesAvailable = true;\r\n      } else {\r\n        this.startPointCitiesAvailable = false;\r\n        this.ionInputStartElRef.nativeElement.querySelector(\"input\").value = \"\";\r\n      }\r\n    });\r\n  }\r\n\r\n  onEndPointSearchChange(event: any) {\r\n    if (event.detail.value == \"\") {\r\n      this.onClearEndPoint();\r\n    }\r\n    const substring = event.target.value;\r\n    if (this.ignoreNextEndPointChange) {\r\n      this.ignoreNextEndPointChange = false;\r\n      this.endPointCitiesAvailable = false;\r\n      return;\r\n    }\r\n    this.placesSrv.getEndPointAutocomplete(substring).subscribe((cities) => {\r\n      this.endPointCities = cities;\r\n\r\n      if (cities.length > 0) {\r\n        this.endPointCitiesAvailable = true;\r\n      } else {\r\n        this.endPointCitiesAvailable = false;\r\n        this.ionInputEndElRef.nativeElement.querySelector(\"input\").value = \"\";\r\n      }\r\n    });\r\n  }\r\n\r\n  startPointCitySelected(city: any): void {\r\n    this.startPointCity = city;\r\n    this.ignoreNextStartPointChange = true;\r\n  }\r\n\r\n  endPointCitySelected(city: any): void {\r\n    this.endPointCity = city;\r\n    this.ignoreNextEndPointChange = true;\r\n  }\r\n\r\n  searchPath() {\r\n    this.placesSrv.getPaths(this.startPointCity, this.endPointCity);\r\n  }\r\n\r\n  onClearStartPoint() {\r\n    console.log(\"on clear start point\");\r\n    this.startPointCity = { id: -1, name: \"\" };\r\n    this.ignoreNextStartPointChange = true;\r\n    this.startPointCitiesAvailable = false;\r\n    this.startPointCities = [];\r\n  }\r\n\r\n  onClearEndPoint() {\r\n    this.endPointCity = { id: -1, name: \"\" };\r\n    this.ignoreNextEndPointChange = true;\r\n    this.endPointCitiesAvailable = false;\r\n    this.endPointCities = [];\r\n  }\r\n\r\n  onClearAll() {\r\n    this.onClearStartPoint();\r\n    this.onClearEndPoint();\r\n  }\r\n\r\n  toSearchPage() {\r\n    this.navCtrl.navigateBack(\"/places/tabs/discover\");\r\n  }\r\n\r\n  onSelectLang(lang: any) {\r\n    this.translate.use(lang.detail.value);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AlertController } from \"@ionic/angular\";\r\nimport { BehaviorSubject, Observable, of, Subject, Subscription } from \"rxjs\";\r\nimport { map, take, tap } from \"rxjs/operators\";\r\nimport { HttpService } from \"../http.service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  ErrorType,\r\n  ICity,\r\n  IFetchedPathDetails,\r\n  IFetchedPaths,\r\n  TransportationType,\r\n} from \"./places.model\";\r\n\r\nconst iconMap = new Map();\r\niconMap.set(\"Ground route\", \"../../assets/images/groundWay.png\");\r\niconMap.set(\"Mixed route\", \"../../assets/images/mixedWay.png\");\r\niconMap.set(\"Flying route\", \"../../assets/images/flightWay.png\");\r\n\r\nenum Icons {\r\n  FLIGHT = `<span class=\"material-icons\">\r\n  flight\r\n  </span>`,\r\n  BUS = `<span class=\"material-icons\">\r\n  directions_bus\r\n  </span>`,\r\n  TRAIN = `<span class=\"material-icons\">\r\n  directions_railway\r\n  </span>`,\r\n  SUBWAY = `<span class=\"material-icons\">\r\n  directions_subway\r\n  </span>`,\r\n  SHIP = `<span class=\"material-icons\">\r\n  directions_boat\r\n  </span>`,\r\n  ONFOOT = `<span class=\"material-icons\">\r\n  directions_walk\r\n  </span>`,\r\n  CAR = `<span class=\"material-icons\">\r\n  directions_car\r\n  </span>`,\r\n  TAXI = `<span class=\"material-icons\">\r\n  local_taxi\r\n  </span>`,\r\n  SHUTTLE = `<span class=\"material-icons\">\r\n  shuttle\r\n  </span>`,\r\n}\r\n\r\nconst transportIconMap = new Map();\r\n/* transportIconMap.set(\"Bus\", \"../../assets/images/transport/bus.png\");\r\ntransportIconMap.set(\"Train\", \"../../assets/images/transport/train.png\");\r\ntransportIconMap.set(\"Ride Share\", \"../../assets/images/transport/rideShare.png\");\r\ntransportIconMap.set(\"Taxi\", \"../../assets/images/transport/taxi.png\");\r\ntransportIconMap.set(\"Flight\", \"../../assets/images/transport/flight.png\"); */\r\ntransportIconMap.set(\"Bus\", Icons.BUS);\r\ntransportIconMap.set(\"Train\", Icons.TRAIN);\r\ntransportIconMap.set(\"Ride Share\", Icons.CAR);\r\ntransportIconMap.set(\"Taxi\", Icons.TAXI);\r\ntransportIconMap.set(\"Flight\", Icons.FLIGHT);\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PlacesService {\r\n  allCities: ICity[] = [];\r\n  endPointCities: ICity[];\r\n  citiesSub: Subscription;\r\n  paths: IFetchedPaths[];\r\n  startPointCity: ICity;\r\n  endPointCity: ICity;\r\n  currentPaths: IFetchedPaths[];\r\n\r\n  pathsSubj$: Subject<any> = new BehaviorSubject<any>([]);\r\n  cleanPathsSubj$: Subject<any> = new Subject<boolean>();\r\n\r\n  constructor(\r\n    private httpSrv: HttpService,\r\n    private alertCtrl: AlertController,\r\n    private router: Router,\r\n    public translate: TranslateService\r\n  ) {}\r\n\r\n  getAllCities() {\r\n    this.citiesSub = this.httpSrv\r\n      .getCities()\r\n      .subscribe((cities) => (this.allCities = cities as ICity[]));\r\n  }\r\n\r\n  getStartPointAutocomplete(str: string): Observable<ICity[]> {\r\n    return this.getCitiesAutocomplete(str).pipe(\r\n      tap((res) => {\r\n        var re = /^[A-Za-z0-9]+$/;\r\n\r\n        if (!str.match(re)) {\r\n          this.errorHandler(\"LATIN_CHARACTERES\");\r\n        } else if (res.length == 0) {\r\n          this.errorHandler(\"NO_RESULTS_FOR_SEARCH\");\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getEndPointAutocomplete(str: string): Observable<ICity[]> {\r\n    return this.getCitiesAutocomplete(str).pipe(\r\n      tap((res) => {\r\n        var re = /^[A-Za-z0-9]+$/;\r\n\r\n        if (!str.match(re)) {\r\n          this.errorHandler(\"LATIN_CHARACTERES\");\r\n        } else if (res.length == 0) {\r\n          this.errorHandler(\"NO_RESULTS_FOR_SEARCH\");\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getPaths(startPoint: ICity, endPoint: ICity): void {\r\n    this.startPointCity = startPoint;\r\n    this.endPointCity = endPoint;\r\n    this.httpSrv\r\n      .getPaths(startPoint.id, endPoint.id)\r\n      .pipe(\r\n        map((data) => {\r\n          let paths = data.body as IFetchedPaths[];\r\n\r\n          for (let i = 1; i <= paths.length - 1; i++) {\r\n            if (\r\n              paths[0].duration_minutes === paths[i].duration_minutes &&\r\n              data.body[0].euro_price === data.body[i].euro_price\r\n            ) {\r\n              paths[i].duration_minutes = 0;\r\n              paths[i].euro_price = 0;\r\n            }\r\n          }\r\n          const pathsArr = paths.filter((path) => path.duration_minutes != \"0\");\r\n          const transformedPaths = pathsArr.map((path: IFetchedPaths) => {\r\n            return this.transformPath(path);\r\n          });\r\n          this.currentPaths = transformedPaths;\r\n\r\n          return transformedPaths;\r\n        })\r\n      )\r\n      .subscribe((paths) => {\r\n        this.paths = paths;\r\n        if (paths.length === 0) {\r\n          this.errorHandler(\"NO_RESULTS_FOR_SEARCH\");\r\n          this.cleanPathsSubj$.next(true);\r\n          this.pathsSubj$.next([]);\r\n          return;\r\n        } else {\r\n          this.pathsSubj$.next(this.paths);\r\n        }\r\n      }),\r\n      (_error) => {\r\n        this.errorHandler(\"SLEEPING_SERVER\");\r\n        this.pathsSubj$.next([]);\r\n      };\r\n  }\r\n\r\n  getPathDetail(type: string): IFetchedPaths {\r\n    return this.currentPaths.find((p) => p.routeType === type);\r\n  }\r\n\r\n  private errorHandler(type: ErrorType) {\r\n    this.alertCtrl\r\n      .create({\r\n        header: this.translate.instant(`ERRORS:${type}.Header`),\r\n        message: this.translate.instant(`ERRORS:${type}.Message`),\r\n        buttons: [\r\n          {\r\n            text: this.translate.instant(`ERRORS:${type}.Button`),\r\n            handler: () => {\r\n              this.router.navigate([\"/places/tabs/discover\"]);\r\n            },\r\n          },\r\n        ],\r\n      })\r\n      .then((alertEl) => {\r\n        alertEl.present();\r\n      });\r\n  }\r\n\r\n  private transformPathDetails(\r\n    paths: IFetchedPathDetails[]\r\n  ): IFetchedPathDetails[] {\r\n    const transformed = paths.map((path) => {\r\n    \r\n      return {\r\n        ...path,\r\n        duration_minutes: this.transformDuration(\r\n          path.duration_minutes.toString()\r\n        ),\r\n        euro_price: this.transformPrice(path.euro_price.toString()),\r\n        imgUrl: transportIconMap.get(path.transportation_type),\r\n      };\r\n    });\r\n\r\n    return transformed;\r\n  }\r\n\r\n  private transformPath(path: IFetchedPaths): IFetchedPaths {\r\n    console.log(\"path\", path );\r\n    const transformedPath = {\r\n      ...path,\r\n      duration_minutes: this.transformDuration(\r\n        path.duration_minutes.toString(),\r\n      \r\n      ),\r\n      euro_price: this.transformPrice(path.euro_price.toString()),\r\n      direct_paths: this.transformPathDetails(path.direct_paths),\r\n      imgUrl: iconMap.get(path.routeType), \r\n      routeType: this.translate.instant(`ROUT_TYPE.${path.routeType}`),\r\n    };\r\n    return transformedPath;\r\n  }\r\n\r\n  private transformDuration(minutes: string) {\r\n    const days = Math.floor(+minutes / 60 / 24);\r\n    const dayStr = days < 1 ? \"\" : days + \"d\";\r\n    const hours = Math.floor(+minutes / 60 - days * 24);\r\n    const hourStr = hours < 1 ? \"\" : hours + \"h\";\r\n    const min = +minutes - days * 24 * 60 - hours * 60;\r\n    const minStr = min + \"min\";\r\n    const duration = dayStr + \" \" + hourStr + \" \" + minStr;\r\n\r\n    return duration;\r\n  }\r\n\r\n  private transformPrice(price: string) {\r\n    const euro = Math.floor(+price);\r\n    const cent = Math.floor(+price - euro) * 10;\r\n    return price;\r\n  }\r\n\r\n  private getCitiesAutocomplete(str: string): Observable<ICity[]> {\r\n    const citiesList = this.allCities.filter((city) => {\r\n      return city.name.toLowerCase().indexOf(str.toLowerCase()) > -1;\r\n    });\r\n\r\n    const transformedList = citiesList.map((item, index, array) => {\r\n      return {\r\n        ...item,\r\n        index: item.name.toLowerCase().indexOf(str.toLowerCase()),\r\n      };\r\n    });\r\n    const sortedList = transformedList\r\n      .sort((a, b) => {\r\n        return a.index - b.index;\r\n      })\r\n      .map((item) => {\r\n        return { id: item.id, name: item.name };\r\n      })\r\n      .slice(0, 10);\r\n    return of(sortedList);\r\n  }\r\n}\r\n"]}