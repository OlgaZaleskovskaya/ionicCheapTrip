{"version":3,"sources":["webpack:///src/app/places/discover/details/details.page.html","webpack:///src/app/http.service.ts","webpack:///src/app/places/discover/details/details.page.scss","webpack:///src/app/places/discover/details/details.page.ts","webpack:///src/app/places/places.service.ts"],"names":["HttpService","http","URL","url2","get","startPointId","endPointId","url","observe","providedIn","DetailsPage","route","navCtrl","placesSrv","startPointCityName","startPointCity","name","endPointCityName","endPointCity","slidingItem","close","console","log","selector","template","iconMap","Map","set","Icons","transportIconMap","BUS","TRAIN","CAR","TAXI","FLIGHT","PlacesService","httpSrv","alertCtrl","router","translate","allCities","pathsSubj$","cleanPathsSubj$","citiesSub","getCities","subscribe","cities","str","getCitiesAutocomplete","pipe","res","re","match","errorHandler","length","startPoint","endPoint","getPaths","id","data","paths","body","i","duration_minutes","euro_price","pathsArr","filter","path","transformedPaths","map","transformPath","currentPaths","next","_error","type","find","p","routeType","create","header","instant","message","buttons","text","handler","navigate","then","alertEl","present","transformed","transformDuration","toString","transformPrice","imgUrl","transportation_type","transformedPath","direct_paths","transformPathDetails","minutes","days","Math","floor","dayStr","hours","hourStr","min","minStr","duration","price","euro","cent","citiesList","city","toLowerCase","indexOf","transformedList","item","index","array","sortedList","sort","a","b","slice"],"mappings":"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","file":"default~discover-details-details-module~discover-offer-offer-module~offer-offer-module-es5.js","sourcesContent":["export default \"<!-- <ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>{{startPointCityName}} => {{endPointCityName}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n -->\\r\\n  <ion-list>\\r\\n    <ion-item-sliding *ngFor=\\\"let way of ways\\\" #slidingItem>\\r\\n      <ion-item class=\\\"no-padding\\\">\\r\\n   \\r\\n        <ion-label>\\r\\n          <p> <span class=\\\"spacer\\\"></span>{{way.transportation_type}}<span class=\\\"spacer\\\"></span></p>\\r\\n          <p>{{way.from}} <span class=\\\"spacer\\\"></span>\\r\\n            <ion-icon name=\\\"arrow-forward\\\"></ion-icon><span class=\\\"spacer\\\"></span>\\r\\n            {{way.to}}\\r\\n          </p>\\r\\n          <p>\\r\\n            <span>{{way.duration_minutes}}</span>\\r\\n            <span class=\\\"spacer\\\"></span>\\r\\n            <span>\\r\\n              <ion-badge color=\\\"primary\\\">{{way.euro_price | currency:'EUR':'symbol':'1.2-2' }}</ion-badge>\\r\\n            </span>\\r\\n\\r\\n          </p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <ion-item-option color=\\\"secondary\\\" (click)=\\\"onGoToMap(slidingItem)\\\">\\r\\n          <ion-icon name=\\\"eye-sharp\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n\\r\\n    </ion-item-sliding>\\r\\n  </ion-list>\\r\\n  <!--  <app-location-picker></app-location-picker> -->\\r\\n \";","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { environment } from \"../environments/environment\";\nimport { ICity } from \"./places/places.model\";\n\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpService {\n  constructor(private http: HttpClient) {}\n\n  URL = environment.url2;\n\n  getCities(): Observable<any> {\n    return this.http.get(`${this.URL}/locations/all`);\n  }\n\n  getPaths(startPointId: number, endPointId: number): Observable<any> {\n    const url = `${this.URL}/routes?from=${startPointId}&to=${endPointId}`;\n    return this.http.get(url, { observe: \"response\" });\n  }\n}\n","export default \"p {\\n  display: flex;\\n}\\n\\nspan.spacer {\\n  flex: 1 1 auto;\\n}\\n\\n.icon {\\n  color: var(--ion-color-secondary);\\n}\\n\\n.item-avatar {\\n  width: 100% !important;\\n  height: 100% !important;\\n  max-width: 40px !important;\\n  max-height: 40px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGxhY2VzL2Rpc2NvdmVyL2RldGFpbHMvZGV0YWlscy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FBQ0o7O0FBQ0E7RUFDSSxjQUFBO0FBRUo7O0FBRUE7RUFDSSxpQ0FBQTtBQUNKOztBQUVBO0VBQ0ksc0JBQUE7RUFDQSx1QkFBQTtFQUNBLDBCQUFBO0VBQ0EsMkJBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BsYWNlcy9kaXNjb3Zlci9kZXRhaWxzL2RldGFpbHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsicHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuc3Bhbi5zcGFjZXJ7XHJcbiAgICBmbGV4OiAxIDEgYXV0bztcclxuICAgIFxyXG59XHJcblxyXG4uaWNvbntcclxuICAgIGNvbG9yOiB2YXIoIC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XHJcbn1cclxuXHJcbi5pdGVtLWF2YXRhciAgeyAgICAgXHJcbiAgICB3aWR0aDoxMDAlICFpbXBvcnRhbnQ7ICBcclxuICAgIGhlaWdodCA6IDEwMCUgIWltcG9ydGFudDsgIFxyXG4gICAgbWF4LXdpZHRoOiA0MHB4ICFpbXBvcnRhbnQ7ICAvL2FueSBzaXplXHJcbiAgICBtYXgtaGVpZ2h0OiA0MHB4ICFpbXBvcnRhbnQ7IC8vYW55IHNpemUgXHJcbiAgICB9XHJcbiAiXX0= */\";","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { IonItemSliding, NavController } from \"@ionic/angular\";\r\nimport { IFetchedPathDetails, IFetchedPaths } from \"../../places.model\";\r\nimport { PlacesService } from \"../../places.service\";\r\n\r\n@Component({\r\n  selector: \"app-details\",\r\n  templateUrl: \"./details.page.html\",\r\n  styleUrls: [\"./details.page.scss\"],\r\n})\r\nexport class DetailsPage implements OnInit {\r\n  rout: IFetchedPaths;\r\n  paths: IFetchedPathDetails[];\r\n  endPointCityName: string;\r\n  startPointCityName: string;\r\n  @Input() ways: Array<any>;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private navCtrl: NavController,\r\n    private placesSrv: PlacesService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n \r\n    this.startPointCityName = this.placesSrv.startPointCity.name;\r\n    this.endPointCityName = this.placesSrv.endPointCity.name;\r\n   /*  this.route.paramMap.subscribe((paramMap) => {\r\n      if (!paramMap.has(\"pathId\")) {\r\n        this.navCtrl.navigateBack(\"/places/tabs/offer\");\r\n        return;\r\n      }\r\n      this.rout = this.placesSrv.getPathDetail(paramMap.get(\"pathId\"));\r\n      this.paths = this.rout.direct_paths;\r\n    }); */\r\n  }\r\n\r\n  onGoToMap(slidingItem: IonItemSliding){\r\n   \r\n      slidingItem.close();\r\n  \r\n      console.log('Editing item');\r\n   \r\n  }\r\n\r\n  \r\n \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AlertController } from \"@ionic/angular\";\r\nimport { BehaviorSubject, Observable, of, Subject, Subscription } from \"rxjs\";\r\nimport { map, take, tap } from \"rxjs/operators\";\r\nimport { HttpService } from \"../http.service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport {\r\n  ErrorType,\r\n  ICity,\r\n  IFetchedPathDetails,\r\n  IFetchedPaths,\r\n  TransportationType,\r\n} from \"./places.model\";\r\n\r\nconst iconMap = new Map();\r\niconMap.set(\"Ground route\", \"../../assets/images/groundWay.png\");\r\niconMap.set(\"Mixed route\", \"../../assets/images/mixedWay.png\");\r\niconMap.set(\"Flying route\", \"../../assets/images/flightWay.png\");\r\n\r\nenum Icons {\r\n  FLIGHT = `<span class=\"material-icons\">\r\n  flight\r\n  </span>`,\r\n  BUS = `<span class=\"material-icons\">\r\n  directions_bus\r\n  </span>`,\r\n  TRAIN = `<span class=\"material-icons\">\r\n  directions_railway\r\n  </span>`,\r\n  SUBWAY = `<span class=\"material-icons\">\r\n  directions_subway\r\n  </span>`,\r\n  SHIP = `<span class=\"material-icons\">\r\n  directions_boat\r\n  </span>`,\r\n  ONFOOT = `<span class=\"material-icons\">\r\n  directions_walk\r\n  </span>`,\r\n  CAR = `<span class=\"material-icons\">\r\n  directions_car\r\n  </span>`,\r\n  TAXI = `<span class=\"material-icons\">\r\n  local_taxi\r\n  </span>`,\r\n  SHUTTLE = `<span class=\"material-icons\">\r\n  shuttle\r\n  </span>`,\r\n}\r\n\r\nconst transportIconMap = new Map();\r\n/* transportIconMap.set(\"Bus\", \"../../assets/images/transport/bus.png\");\r\ntransportIconMap.set(\"Train\", \"../../assets/images/transport/train.png\");\r\ntransportIconMap.set(\"Ride Share\", \"../../assets/images/transport/rideShare.png\");\r\ntransportIconMap.set(\"Taxi\", \"../../assets/images/transport/taxi.png\");\r\ntransportIconMap.set(\"Flight\", \"../../assets/images/transport/flight.png\"); */\r\ntransportIconMap.set(\"Bus\", Icons.BUS);\r\ntransportIconMap.set(\"Train\", Icons.TRAIN);\r\ntransportIconMap.set(\"Ride Share\", Icons.CAR);\r\ntransportIconMap.set(\"Taxi\", Icons.TAXI);\r\ntransportIconMap.set(\"Flight\", Icons.FLIGHT);\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PlacesService {\r\n  allCities: ICity[] = [];\r\n  endPointCities: ICity[];\r\n  citiesSub: Subscription;\r\n  paths: IFetchedPaths[];\r\n  startPointCity: ICity;\r\n  endPointCity: ICity;\r\n  currentPaths: IFetchedPaths[];\r\n\r\n  pathsSubj$: Subject<any> = new BehaviorSubject<any>([]);\r\n  cleanPathsSubj$: Subject<any> = new Subject<boolean>();\r\n\r\n  constructor(\r\n    private httpSrv: HttpService,\r\n    private alertCtrl: AlertController,\r\n    private router: Router,\r\n    public translate: TranslateService\r\n  ) {}\r\n\r\n  getAllCities() {\r\n    this.citiesSub = this.httpSrv\r\n      .getCities()\r\n      .subscribe((cities) => (this.allCities = cities as ICity[]));\r\n  }\r\n\r\n  getStartPointAutocomplete(str: string): Observable<ICity[]> {\r\n    return this.getCitiesAutocomplete(str).pipe(\r\n      tap((res) => {\r\n        var re = /^[A-Za-z0-9]+$/;\r\n\r\n        if (!str.match(re)) {\r\n          this.errorHandler(\"LATIN_CHARACTERES\");\r\n        } else if (res.length == 0) {\r\n          this.errorHandler(\"NO_RESULTS_FOR_SEARCH\");\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getEndPointAutocomplete(str: string): Observable<ICity[]> {\r\n    return this.getCitiesAutocomplete(str).pipe(\r\n      tap((res) => {\r\n        var re = /^[A-Za-z0-9]+$/;\r\n\r\n        if (!str.match(re)) {\r\n          this.errorHandler(\"LATIN_CHARACTERES\");\r\n        } else if (res.length == 0) {\r\n          this.errorHandler(\"NO_RESULTS_FOR_SEARCH\");\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getPaths(startPoint: ICity, endPoint: ICity): void {\r\n    this.startPointCity = startPoint;\r\n    this.endPointCity = endPoint;\r\n    this.httpSrv\r\n      .getPaths(startPoint.id, endPoint.id)\r\n      .pipe(\r\n        map((data) => {\r\n          let paths = data.body as IFetchedPaths[];\r\n\r\n          for (let i = 1; i <= paths.length - 1; i++) {\r\n            if (\r\n              paths[0].duration_minutes === paths[i].duration_minutes &&\r\n              data.body[0].euro_price === data.body[i].euro_price\r\n            ) {\r\n              paths[i].duration_minutes = 0;\r\n              paths[i].euro_price = 0;\r\n            }\r\n          }\r\n          const pathsArr = paths.filter((path) => path.duration_minutes != \"0\");\r\n          const transformedPaths = pathsArr.map((path: IFetchedPaths) => {\r\n            return this.transformPath(path);\r\n          });\r\n          this.currentPaths = transformedPaths;\r\n\r\n          return transformedPaths;\r\n        })\r\n      )\r\n      .subscribe((paths) => {\r\n        this.paths = paths;\r\n        if (paths.length === 0) {\r\n          this.errorHandler(\"NO_RESULTS_FOR_SEARCH\");\r\n          this.cleanPathsSubj$.next(true);\r\n          this.pathsSubj$.next([]);\r\n          return;\r\n        } else {\r\n          this.pathsSubj$.next(this.paths);\r\n        }\r\n      }),\r\n      (_error) => {\r\n        this.errorHandler(\"SLEEPING_SERVER\");\r\n        this.pathsSubj$.next([]);\r\n      };\r\n  }\r\n\r\n  getPathDetail(type: string): IFetchedPaths {\r\n    return this.currentPaths.find((p) => p.routeType === type);\r\n  }\r\n\r\n  private errorHandler(type: ErrorType) {\r\n    this.alertCtrl\r\n      .create({\r\n        header: this.translate.instant(`ERRORS:${type}.Header`),\r\n        message: this.translate.instant(`ERRORS:${type}.Message`),\r\n        buttons: [\r\n          {\r\n            text: this.translate.instant(`ERRORS:${type}.Button`),\r\n            handler: () => {\r\n              this.router.navigate([\"/places/tabs/discover\"]);\r\n            },\r\n          },\r\n        ],\r\n      })\r\n      .then((alertEl) => {\r\n        alertEl.present();\r\n      });\r\n  }\r\n\r\n  private transformPathDetails(\r\n    paths: IFetchedPathDetails[]\r\n  ): IFetchedPathDetails[] {\r\n    const transformed = paths.map((path) => {\r\n    \r\n      return {\r\n        ...path,\r\n        duration_minutes: this.transformDuration(\r\n          path.duration_minutes.toString()\r\n        ),\r\n        euro_price: this.transformPrice(path.euro_price.toString()),\r\n        imgUrl: transportIconMap.get(path.transportation_type),\r\n      };\r\n    });\r\n\r\n    return transformed;\r\n  }\r\n\r\n  private transformPath(path: IFetchedPaths): IFetchedPaths {\r\n    console.log(\"path\", path );\r\n    const transformedPath = {\r\n      ...path,\r\n      duration_minutes: this.transformDuration(\r\n        path.duration_minutes.toString(),\r\n      \r\n      ),\r\n      euro_price: this.transformPrice(path.euro_price.toString()),\r\n      direct_paths: this.transformPathDetails(path.direct_paths),\r\n      imgUrl: iconMap.get(path.routeType), \r\n      routeType: this.translate.instant(`ROUT_TYPE.${path.routeType}`),\r\n    };\r\n    return transformedPath;\r\n  }\r\n\r\n  private transformDuration(minutes: string) {\r\n    const days = Math.floor(+minutes / 60 / 24);\r\n    const dayStr = days < 1 ? \"\" : days + \"d\";\r\n    const hours = Math.floor(+minutes / 60 - days * 24);\r\n    const hourStr = hours < 1 ? \"\" : hours + \"h\";\r\n    const min = +minutes - days * 24 * 60 - hours * 60;\r\n    const minStr = min + \"min\";\r\n    const duration = dayStr + \" \" + hourStr + \" \" + minStr;\r\n\r\n    return duration;\r\n  }\r\n\r\n  private transformPrice(price: string) {\r\n    const euro = Math.floor(+price);\r\n    const cent = Math.floor(+price - euro) * 10;\r\n    return price;\r\n  }\r\n\r\n  private getCitiesAutocomplete(str: string): Observable<ICity[]> {\r\n    const citiesList = this.allCities.filter((city) => {\r\n      return city.name.toLowerCase().indexOf(str.toLowerCase()) > -1;\r\n    });\r\n\r\n    const transformedList = citiesList.map((item, index, array) => {\r\n      return {\r\n        ...item,\r\n        index: item.name.toLowerCase().indexOf(str.toLowerCase()),\r\n      };\r\n    });\r\n    const sortedList = transformedList\r\n      .sort((a, b) => {\r\n        return a.index - b.index;\r\n      })\r\n      .map((item) => {\r\n        return { id: item.id, name: item.name };\r\n      })\r\n      .slice(0, 10);\r\n    return of(sortedList);\r\n  }\r\n}\r\n"]}